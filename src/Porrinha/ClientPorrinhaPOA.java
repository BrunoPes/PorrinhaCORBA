package Porrinha;


/**
* Porrinha/ClientPorrinhaPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Porrinha.idl
* Domingo, 25 de Junho de 2017 22h29min39s GFT
*/

public abstract class ClientPorrinhaPOA extends org.omg.PortableServer.Servant
 implements Porrinha.ClientPorrinhaOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("tellPlayersNames", new java.lang.Integer (0));
    _methods.put ("tellNumberOfPicks", new java.lang.Integer (1));
    _methods.put ("tellResultGuess", new java.lang.Integer (2));
    _methods.put ("roundFinished", new java.lang.Integer (3));
    _methods.put ("waitForStart", new java.lang.Integer (4));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // Porrinha/ClientPorrinha/tellPlayersNames
       {
         String players[] = Porrinha.namesHelper.read (in);
         int length = in.read_long ();
         this.tellPlayersNames (players, length);
         out = $rh.createReply();
         break;
       }

       case 1:  // Porrinha/ClientPorrinha/tellNumberOfPicks
       {
         this.tellNumberOfPicks ();
         out = $rh.createReply();
         break;
       }

       case 2:  // Porrinha/ClientPorrinha/tellResultGuess
       {
         int maxSum = in.read_long ();
         this.tellResultGuess (maxSum);
         out = $rh.createReply();
         break;
       }

       case 3:  // Porrinha/ClientPorrinha/roundFinished
       {
         int result = in.read_long ();
         int maxSum = in.read_long ();
         String playersPicks[] = Porrinha.namesHelper.read (in);
         String winners[] = Porrinha.namesHelper.read (in);
         this.roundFinished (result, maxSum, playersPicks, winners);
         out = $rh.createReply();
         break;
       }

       case 4:  // Porrinha/ClientPorrinha/waitForStart
       {
         this.waitForStart ();
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:Porrinha/ClientPorrinha:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public ClientPorrinha _this() 
  {
    return ClientPorrinhaHelper.narrow(
    super._this_object());
  }

  public ClientPorrinha _this(org.omg.CORBA.ORB orb) 
  {
    return ClientPorrinhaHelper.narrow(
    super._this_object(orb));
  }


} // class ClientPorrinhaPOA
